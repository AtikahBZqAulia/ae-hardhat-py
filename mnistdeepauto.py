from __future__ import print_function
from converter import converter
from makebatches import *
from rbm import rbm
from backprop import backprop
from rbmhidlinear import rbmhidlinear
import scipy.io as sio
from mnistdisp import mnistdisp

import cv2 as cv
import numpy as np
import os

MAX_EPOCH = 10

NUMHID = 6000
NUMHID2 = 3000
NUMHID3 = 2000
NUMHID4 = 1500
NUMHID5 = 1000
NUMPEN = 500
NUMPEN2 = 250
NUMOPEN = 30

# file input
path = "C:/Users/LENOVO/Downloads/data75"
directory = os.listdir(path)   

def get_dataset(filename):
    frame = cv.imread(path+'/'+filename)
    gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)
    return frame, gray

BATCH_DATA = np.empty([0, 5625])
i= 1
for filename in directory:
    frame, gray = get_dataset(filename)
    BATCH_DATA = np.append(BATCH_DATA, np.ndarray.flatten(gray).reshape(1, -1), axis=0)
    i+=1
BATCH_DATA = np.reshape(BATCH_DATA, BATCH_DATA.shape + (1,))
BATCH_DATA/=255.0
NUM_CASES, NUM_DIMS, NUM_BATCHES = BATCH_DATA.shape

print('Pretraining Layer 1 with RBM: {}-{}'.format(NUM_DIMS, NUMHID))
RESTART = 1
NUM_HID = NUMHID
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
print("BATCHPOSHIDPROBS.shape= ", BATCHPOSHIDPROBS.shape) 
HIDRECBIASES = HIDBIASES
VISHID__ = VISHID
VISBIASES__ = VISBIASES

print('Pretraining Layer 2 with RBM: {}-{}'.format(NUMHID, NUMHID2))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMHID2
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN = VISHID
PENRECBIASES = HIDBIASES
HIDGENBIASES = VISBIASES

print('Pretraining Layer 3 with RBM: {}-{}'.format(NUMHID2, NUMHID3))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMHID3
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN2 = VISHID
PENRECBIASES2 = HIDBIASES
HIDGENBIASES2 = VISBIASES

print('Pretraining Layer 4 with RBM: {}-{}'.format(NUMHID3, NUMHID4))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMHID4
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN3 = VISHID
PENRECBIASES3 = HIDBIASES
HIDGENBIASES3 = VISBIASES

print('Pretraining Layer 5 with RBM: {}-{}'.format(NUMHID4, NUMHID5))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMHID5
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN4 = VISHID
PENRECBIASES4 = HIDBIASES
HIDGENBIASES4 = VISBIASES

print('Pretraining Layer 6 with RBM: {}-{}'.format(NUMHID5, NUMPEN))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMPEN
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN5 = VISHID
PENRECBIASES5 = HIDBIASES
HIDGENBIASES5 = VISBIASES

print('Pretraining Layer 7 with RBM: {}-{}'.format(NUMPEN, NUMPEN2))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMPEN2
RESTART = 1
BATCHPOSHIDPROBS, VISHID, HIDBIASES, VISBIASES = rbm(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDPEN6 = VISHID
PENRECBIASES6 = HIDBIASES
HIDGENBIASES6 = VISBIASES

print('Pretraining Layer 8 with RBM: {}-{}'.format(NUMPEN2, NUMOPEN))
BATCH_DATA = BATCHPOSHIDPROBS
NUM_HID = NUMOPEN
RESTART = 1
VISHID, HIDBIASES, VISBIASES = rbmhidlinear(BATCH_DATA, RESTART, NUM_HID, NUM_DIMS, MAX_EPOCH)
HIDTOP = VISHID
TOPRECBIASES = HIDBIASES
TOPGENBIASES = VISBIASES

print('END of Pretraining Layer 4 with RBM: {}-{}'.format(NUMPEN2, NUMOPEN))

ERR = backprop(VISHID__, VISBIASES__, PENRECBIASES, PENRECBIASES2, PENRECBIASES3, PENRECBIASES4, PENRECBIASES5, PENRECBIASES6, HIDRECBIASES, HIDPEN, HIDPEN2, HIDPEN3, HIDPEN4, HIDPEN5, HIDPEN6, HIDGENBIASES, HIDGENBIASES2, HIDGENBIASES3, HIDGENBIASES4, HIDGENBIASES5, HIDGENBIASES6, HIDTOP, TOPRECBIASES, TOPGENBIASES)

